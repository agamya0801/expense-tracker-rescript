name : Testing - Pagespeed Insights
on: 
  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch to deploy and test'
        required: true
        default: 'main'
      staging_url:
        description: 'The URL of the staging environment'
        required: true
        
jobs:
  fetch_pagespeed:
    runs-on: ubuntu-latest
    
    outputs:
      mobile-score: ${{ steps.pagespeed-mobile.outputs.mobile-score }}
      desktop-score: ${{ steps.pagespeed-desktop.outputs.desktop-score }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Get commit SHA
        id: get-sha
        run: echo "::set-output name=sha::$(git rev-parse HEAD)"

      - name: Run PageSpeed Insights API for Mobile
        id: pagespeed-mobile
        env:
          API_KEY: AIzaSyBMukdnJE28tcjeznqyH22-N_zSnW4JL7o
        run: |
          score=$(curl -s "https://www.googleapis.com/pagespeedonline/v5/runPagespeed?url=${{ github.event.inputs.staging_url }}&key=${API_KEY}&strategy=mobile" | jq '.lighthouseResult.categories.performance.score * 100')
          echo "::set-output name=mobile-score::$score"

      - name: Run PageSpeed Insights API for Desktop
        id: pagespeed-desktop
        env:
          API_KEY: AIzaSyBMukdnJE28tcjeznqyH22-N_zSnW4JL7o
        run: |
          score=$(curl -s "https://www.googleapis.com/pagespeedonline/v5/runPagespeed?url=${{ github.event.inputs.staging_url }}&key=${API_KEY}&strategy=desktop" | jq '.lighthouseResult.categories.performance.score * 100')
          echo "::set-output name=desktop-score::$score"

      - name: Check mobile performance score
        run: |
          mobileScore=${{ steps.pagespeed-mobile.outputs.mobile-score }}
          if (( $(echo "$mobileScore < 50" | bc -l) )); then
            echo "Mobile performance score is below the acceptable threshold (50)."
            exit 1
          fi

      - name: Check desktop performance score
        run: |
          desktopScore=${{ steps.pagespeed-desktop.outputs.desktop-score }}
          if (( $(echo "$desktopScore < 50" | bc -l) )); then
            echo "Desktop performance score is below the acceptable threshold (50)."
            exit 1
          fi

      - name: Set commit status to success
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }}
        run: |
          COMMIT_SHA=${{ steps.get-sha.outputs.sha }}
          RESPONSE=$(curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d '{"state": "success", "target_url": "", "description": "PageSpeed Check Passed", "context": "fetch_pagespeed"}' \
            https://api.github.com/repos/${{ github.repository }}/statuses/$COMMIT_SHA)
          if [[ $(echo $RESPONSE | jq -r '.state') == "success" ]]; then
            curl -s -X PATCH -H "Authorization: token $GITHUB_TOKEN" \
              -d '{"required_status_checks": null}' \
              https://api.github.com/repos/${{ github.repository }}/branches/${{ github.event.inputs.branch }}/protection
          fi
          exit 0

      - name: Set commit status to failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }}
        run: |
          COMMIT_SHA=${{ steps.get-sha.outputs.sha }}
          curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d '{"state": "failure", "target_url": "", "description": "PageSpeed Check Failed", "context": "fetch_pagespeed"}' \
            https://api.github.com/repos/${{ github.repository }}/statuses/$COMMIT_SHA
          exit 1
