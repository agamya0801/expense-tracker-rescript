name : Testing - Pagespeed Insights
on: 
  workflow_dispatch:
    inputs:
      branch:
        description: 'Enter your PR branch'
        required: true
        default: 'main'
      ENV_BOX:
        description: 'Enter the staging-box for testing pagespeed'
        required: true
        default: '1'
        
jobs:
  fetch_pagespeed:
    runs-on: ubuntu-latest
    
    outputs:
      mobile-score: ${{ steps.pagespeed-mobile.outputs.mobile-score }}
      desktop-score: ${{ steps.pagespeed-desktop.outputs.desktop-score }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Get commit SHA
        id: get-sha
        run: echo "::set-output name=sha::$(git rev-parse HEAD)"

      - name: Install jq
        run: sudo apt-get install jq

      - name: Set URL based on ENV_BOX
        id: set-url
        run: |
          if [ "${{ github.event.inputs.ENV_BOX }}" -eq "1" ]; then
            echo "URL=https://fe-website-ssr-staging.porter.in" >> $GITHUB_ENV
          else
            echo "URL=https://fe-website-ssr-staging-${{ github.event.inputs.ENV_BOX }}.porter.in" >> $GITHUB_ENV
          fi

      - name: Run PageSpeed Insights API for Mobile
        id: pagespeed-mobile
        env:
          API_KEY: ${{ env.PAGESPEED_INSIGHTS_API_KEY }}
        run: |
          score=$(curl -s "https://www.googleapis.com/pagespeedonline/v5/runPagespeed?url=${URL}&key=${API_KEY}&strategy=mobile" | jq '.lighthouseResult.categories.performance.score * 100')
          echo "::set-output name=mobile-score::$score"

      - name: Run PageSpeed Insights API for Desktop
        id: pagespeed-desktop
        env:
          API_KEY: ${{ env.PAGESPEED_INSIGHTS_API_KEY }}
        run: |
          score=$(curl -s "https://www.googleapis.com/pagespeedonline/v5/runPagespeed?url=${URL}&key=${API_KEY}&strategy=desktop" | jq '.lighthouseResult.categories.performance.score * 100')
          echo "::set-output name=desktop-score::$score"

      - name: Check mobile performance score
        run: |
          mobileScore=${{ steps.pagespeed-mobile.outputs.mobile-score }}
          if (( $(echo "$mobileScore < 30" | bc -l) )); then
            echo "Mobile performance score is below the acceptable threshold (50)."
            exit 1
          fi

      - name: Check desktop performance score
        run: |
          desktopScore=${{ steps.pagespeed-desktop.outputs.desktop-score }}
          if (( $(echo "$desktopScore < 30" | bc -l) )); then
            echo "Desktop performance score is below the acceptable threshold (50)."
            exit 1
          fi

      - name: Set commit status to success
        id: set-status
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }}
        run: |
          COMMIT_SHA=${{ steps.get-sha.outputs.sha }}
          curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d '{"state": "success", "target_url": "", "description": "PageSpeed Check Passed", "context": "fetch_pagespeed"}' \
            https://api.github.com/repos/${{ github.repository }}/statuses/$COMMIT_SHA
          exit 0

      - name: Set commit status to failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }}
        run: |
          COMMIT_SHA=${{ steps.get-sha.outputs.sha }}
          curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d '{"state": "failure", "target_url": "", "description": "PageSpeed Check Failed", "context": "fetch_pagespeed"}' \
            https://api.github.com/repos/${{ github.repository }}/statuses/$COMMIT_SHA
          exit 1

      # - name: Enable merge by updating the check status
      #   if: success()
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GH_ACTIONS_TOKEN }}
      #   run: |
      #     BRANCH=${{ github.event.inputs.branch }}
      #     curl -s -X PUT -H "Authorization: token $GITHUB_TOKEN" \
      #       -H "Accept: application/vnd.github.luke-cage-preview+json" \
      #       https://api.github.com/repos/${{ github.repository }}/branches/$BRANCH/protection \
      #       -d '{
      #         "required_status_checks": {
      #           "strict": false,
      #           "contexts": []
      #         },
      #         "enforce_admins": false,
      #         "required_pull_request_reviews": null,
      #         "restrictions": null
      #       }'
