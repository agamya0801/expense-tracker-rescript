name : Check Pagespeed Score
on: 
  workflow_dispatch:
    inputs:
      branch:
        description: 'Enter your PR branch'
        required: true
        default: 'main'
      STAGING_BOX:
        description: 'Enter the staging-box for testing pagespeed'
        required: true
        default: '1'

jobs:
  fetch_pagespeed:
    runs-on: ubuntu-latest

    outputs:
      mobile-score: ${{ steps.pagespeed-mobile.outputs.mobile-score }}
      desktop-score: ${{ steps.pagespeed-desktop.outputs.desktop-score }}

    env:
      PAGESPEED_API_KEY: ${{ env.PAGESPEED_INSIGHTS_API_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      STAGING_BOX: ${{ github.event.inputs.STAGING_BOX }}
      BRANCH: ${{ github.event.inputs.branch }}
      DEFAULT_STAGING_URL: "https://fe-website-ssr-staging.porter.in"
      PAGESPEED_SCORE_THRESHOLD: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH }}

      - name: Get commit SHA
        id: get-sha
        run: echo "::set-output name=sha::$(git rev-parse HEAD)"

      - name: Install jq
        run: sudo apt-get install jq

      - name: Set URL based on ENV_BOX
        id: set-url
        run: |
          if [ "${{ env.STAGING_BOX }}" -eq "1" ]; then
            echo "URL=${{ env.DEFAULT_STAGING_URL }}" >> $GITHUB_ENV
          else
            echo "URL=https://fe-website-ssr-staging-${{ env.STAGING_BOX }}.porter.in" >> $GITHUB_ENV
          fi
      - name: Run PageSpeed Insights API for Mobile
        id: pagespeed-mobile
        env:
          API_KEY: ${{ env.PAGESPEED_INSIGHTS_API_KEY }}
        run: |
          score=$(curl -s "https://www.googleapis.com/pagespeedonline/v5/runPagespeed?url=${URL}&key=${API_KEY}&strategy=mobile" | jq '.lighthouseResult.categories.performance.score * 100')
          echo "::set-output name=mobile-score::$score"
      - name: Run PageSpeed Insights API for Desktop
        id: pagespeed-desktop
        env:
          API_KEY: ${{ env.PAGESPEED_INSIGHTS_API_KEY }}
        run: |
          score=$(curl -s "https://www.googleapis.com/pagespeedonline/v5/runPagespeed?url=${URL}&key=${API_KEY}&strategy=desktop" | jq '.lighthouseResult.categories.performance.score * 100')
          echo "::set-output name=desktop-score::$score"
      - name: Check mobile performance score
        run: |
          mobileScore=${{ steps.pagespeed-mobile.outputs.mobile-score }}
          threshold=${{ env.PAGESPEED_SCORE_THRESHOLD }}
          if (( $(echo "$mobileScore < $threshold" | bc -l) )); then
            echo "Mobile performance score is below the acceptable threshold ($threshold)."
            exit 1
          fi
      - name: Check desktop performance score
        run: |
          desktopScore=${{ steps.pagespeed-desktop.outputs.desktop-score }}
          threshold=${{ env.PAGESPEED_SCORE_THRESHOLD }}
          if (( $(echo "$desktopScore < $threshold" | bc -l) )); then
            echo "Desktop performance score is below the acceptable threshold ($threshold)."
            exit 1
          fi
      - name: Set commit status to success
        id: set-status
        if: success()
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        run: |
          COMMIT_SHA=${{ steps.get-sha.outputs.sha }}
          curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d '{"state": "success", "target_url": "", "description": "PageSpeed Check Passed", "context": "fetch_pagespeed"}' \
            https://api.github.com/repos/${{ github.repository }}/statuses/$COMMIT_SHA
          exit 0
      - name: Set commit status to failure
        if: failure()
        env:
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
        run: |
          COMMIT_SHA=${{ steps.get-sha.outputs.sha }}
          curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
            -d '{"state": "failure", "target_url": "", "description": "PageSpeed Check Failed", "context": "fetch_pagespeed"}' \
            https://api.github.com/repos/${{ github.repository }}/statuses/$COMMIT_SHA
          exit 1
